#include <iostream>
#include <memory>
#include <vector>

// from visitor 1 we can make a new version with value semantics.
// ditch unique_ptr.
// vector, string are all this type of value.

struct Node {
  virtual ~Node() = default;
  virtual std::string render_html() const = 0;
};

// value semantics wrapper wrap Nodes.
struct NodeValue {
  std::unique_ptr<Node> ptr_;

  template <std::derived_from<Node> T>
  NodeValue(T obj) : ptr_(std::make_unique<T>(std::move(obj))) {}

  Node *operator->() const { return ptr_.get(); }
  Node &operator*() const { return *ptr_; }
};


